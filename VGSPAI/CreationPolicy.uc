/**
 * CreationPolicy - 
 *
 * @version $Revision: 1.3 $
 * @author  Neil Gower (neilg@digitalextremes.com)
 * @date    Dec 2003
 */
class CreationPolicy extends Object
   abstract;


//===========================================================================
// Editable properties
//===========================================================================


//===========================================================================
// Internal data
//===========================================================================

// 
var OpponentFactory theFactory;


//===========================================================================
// CreationPolicy Hooks
//===========================================================================

/**
 * Called every time the factory is reset, including once before the
 * first call to start().  After init(), the policy should be ready,
 * but not started.
 */
function init( OpponentFactory o ) {
    assert( theFactory == None || theFactory == o );
    theFactory = o;
}

/**
 * Called to activate the creation process.  This should not reset the
 * process, unless init has been called first.
 */
function start();

/**
 * Called to deactive (pause) the creation process.
 */
function stop();

/**
 * Called by the factory whenever it is going to create an opponent
 * (which may or may not be initiated by the policy).
 */
function bool shouldCreate();

/**
 * Called by the opponent factory when it gets a (multi)timer that it
 * can't handle itself.
 *
 * @return true if the policy requested the timer, false otherwise.
 */
function bool handleTimer( int timerID ) {
    return false;
}

/**
 * Called by the opponent factory when it gets a TriggerEx call that
 * it can't handle itself.
 *
 * @return true if the policy can handle the event, false otherwise.
 */
function bool handleEvent( Name handler ) {
    return false;
}

/**
 * Called back every time the factory successfully generates an
 * opponent.
 */
function opponentCreated();

/**
 * Called every time one of the opponents generated by the factory is
 * killed or otherwise removed from the game.
 */
function opponentKilled();


//===========================================================================
// Default Properties
//===========================================================================

defaultproperties
{
}
